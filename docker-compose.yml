version: '3.9'

volumes:
  static_files:
  media_files:
  postgres_data:
  certbot-certs:
  certbot-web:
  proxy-dhparams:

services:
  nginx:
    build:
      context: .
      dockerfile: configs/docker/nginx/Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - ${NGINX_PORT}:80
      - 443:443
    networks:
      - django_network
    volumes:
      - static_files:/vol/staticfiles
      - media_files:/vol/mediafiles
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt
      - proxy-dhparams:/vol/proxy
    depends_on:
      - web
  db:
    # build: configs/docker/postgres
    image: postgres:14.1-alpine
    restart: always
    ports:
      - ${PG_PORT}:${PG_PORT}
    env_file:
      - .env
    networks:
      - django_network
    # environment:
    #   - "POSTGRES_HOST_AUTH_METHOD=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build:
      context: .
      dockerfile: configs/docker/web/Dockerfile
    restart: always
    ports:
      - 8000:8000
    env_file:
      - .env
    networks:
      - django_network
    volumes:
      - static_files:/web/staticfiles
      - media_files:/web/mediafiles
    depends_on:
      - db

  certbot:
    build:
      context: .
      dockerfile: configs/docker/certbot/Dockerfile
    env_file:
      - .env
    volumes:
      - certbot-certs:/etc/letsencrypt
      - certbot-web:/vol/www
    depends_on:
      - nginx

networks:
  django_network:
